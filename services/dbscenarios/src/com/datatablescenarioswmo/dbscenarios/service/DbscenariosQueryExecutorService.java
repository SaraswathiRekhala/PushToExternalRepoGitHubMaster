/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.datatablescenarioswmo.dbscenarios.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.InputStream;
import java.io.OutputStream;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportOptions;

import com.datatablescenarioswmo.dbscenarios.AllTypes;
import com.datatablescenarioswmo.dbscenarios.models.query.*;

public interface DbscenariosQueryExecutorService {

    Page<SvUserLoginDataResponse> executeSV_UserLoginData(Pageable pageable);

    InputStream getProfileContentForSV_UserLoginData(Short userId) throws EntityNotFoundException;

    void exportSV_UserLoginData(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeSV_UpdateListOfRecords(SvUpdateListOfRecordsRequest svUpdateListOfRecordsRequest);

    Page<SvAllTypesResponse> executeSv_AllTypes(Pageable pageable);

    InputStream getBlobColContentForSv_AllTypes(Integer pkId) throws EntityNotFoundException;

    void exportSv_AllTypes(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<AllTypes> executeHQL_AllTypesWithId(Integer pkid, Pageable pageable);

    void exportHQL_AllTypesWithId(Integer pkid, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvAllTypesDataResponse> executeSV_AllTypesData(Pageable pageable);

    InputStream getBlobColContentForSV_AllTypesData(Integer pkId) throws EntityNotFoundException;

    void exportSV_AllTypesData(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

}